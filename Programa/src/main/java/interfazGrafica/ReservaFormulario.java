package interfazGrafica;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import objetoReserva.Reserva;


/**
 * La clase ReservaFormulario representa la ventana de formulario de reserva de
 * la aplicación de gestión hotelera. Permite a los usuarios ingresar
 * información para realizar una reserva, como nombre, apellidos, teléfono, tipo
 * de evento, fecha, número de asistentes, tipo de cocina, número de jornadas
 * (en caso de un congreso) y si se necesitan habitaciones para el evento (en
 * caso de un congreso). Esta ventana se muestra como un cuadro de diálogo
 * modal.
 *
 * @author julio
 */
public class ReservaFormulario extends javax.swing.JDialog {

    /**
     * Crea una nueva instancia del formulario de reserva.
     *
     * @param parent El Frame padre al que pertenece este diálogo.
     * @param modal Un booleano que indica si el diálogo debe ser modal o no.
     */
    public ReservaFormulario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.reserva = new Reserva();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoBotonesTipoEvent = new javax.swing.ButtonGroup();
        grupoBotonesHabitSiNo = new javax.swing.ButtonGroup();
        labelTitulo = new javax.swing.JLabel();
        nombreLabel = new javax.swing.JLabel();
        nombreTextField = new javax.swing.JTextField();
        apellidosLabel = new javax.swing.JLabel();
        apellidosTextField = new javax.swing.JTextField();
        telefonoLabel = new javax.swing.JLabel();
        telefonoTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        calendario = new com.toedter.calendar.JDateChooser();
        calendarioLabel = new javax.swing.JLabel();
        presentacionButton = new javax.swing.JRadioButton();
        jornadaButton = new javax.swing.JRadioButton();
        congresoButton = new javax.swing.JRadioButton();
        asistLabel = new javax.swing.JLabel();
        asistTextField = new javax.swing.JTextField();
        tipoCocinaComboBox = new javax.swing.JComboBox<>();
        tipoCocinaLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jornadasLabel = new javax.swing.JLabel();
        jornadasTextField = new javax.swing.JTextField();
        siButton = new javax.swing.JRadioButton();
        noButton = new javax.swing.JRadioButton();
        habitacionesLabel = new javax.swing.JLabel();
        reservarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setResizable(false);

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        labelTitulo.setText("Por favor, rellene los campos para su reserva");

        nombreLabel.setText("Nombre");
        nombreLabel.setToolTipText("");

        nombreTextField.setToolTipText("Escriba el nombre en este apartado");

        apellidosLabel.setText("Apellidos");

        apellidosTextField.setToolTipText("Escriba los apellidos en este apartado");

        telefonoLabel.setText("Teléfono");

        telefonoTextField.setToolTipText("El teléfono constará de 9 dígitos, sin espacios ni guiones");

        calendario.setToolTipText("");
        calendario.setMinSelectableDate(new Date());

        calendarioLabel.setText("Fecha del evento");

        grupoBotonesTipoEvent.add(presentacionButton);
        presentacionButton.setText("Presentación");
        presentacionButton.setToolTipText("Seleccione el tipo de evento");
        presentacionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentacionButtonActionPerformed(evt);
            }
        });

        grupoBotonesTipoEvent.add(jornadaButton);
        jornadaButton.setText("Jornada");
        jornadaButton.setToolTipText("Seleccione el tipo de evento");
        jornadaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jornadaButtonActionPerformed(evt);
            }
        });

        grupoBotonesTipoEvent.add(congresoButton);
        congresoButton.setText("Congreso");
        congresoButton.setToolTipText("Seleccione el tipo de evento");
        congresoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                congresoButtonActionPerformed(evt);
            }
        });

        asistLabel.setText("Nº Asistentes");

        asistTextField.setToolTipText("introduzca el número de personas asistentes al evento");

        tipoCocinaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "               ", "general", "apto para celiacos", "apto para vegetarianos", "apto para veganos" }));
        tipoCocinaComboBox.setToolTipText("Seleccione el tipo de cocina que se precisará para el catering: \n\t- general\n\t- apto para celiacos\n\t- apto para vegetarianos \n\t- apto para veganos.");

        tipoCocinaLabel.setText("Tipo de cocina");

        jornadasLabel.setText("Nº Jornadas");
        jornadasLabel.setEnabled(false);

        jornadasTextField.setToolTipText("Indique el número de jornadas");
        jornadasTextField.setEnabled(false);

        grupoBotonesHabitSiNo.add(siButton);
        siButton.setText("Sí");
        siButton.setEnabled(false);

        grupoBotonesHabitSiNo.add(noButton);
        noButton.setText("No");
        noButton.setEnabled(false);

        habitacionesLabel.setText("Los asistentes necesitarán habitaciones?");
        habitacionesLabel.setToolTipText("Seleccione una opción:\n- Sí, en caso de necesitar habitaciones para los asistentes al congreso\n- No, en caso de no necesitar habitaciones para los asistentes al congreso");
        habitacionesLabel.setEnabled(false);

        reservarButton.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        reservarButton.setText("Reservar");
        reservarButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        reservarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitulo)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(asistLabel)
                                .addGap(18, 18, 18)
                                .addComponent(asistTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(tipoCocinaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tipoCocinaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(telefonoLabel)
                                    .addComponent(nombreLabel))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(apellidosLabel))
                                    .addComponent(telefonoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addComponent(apellidosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(72, 72, 72)
                                    .addComponent(jornadasLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(jornadasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(51, 51, 51)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(reservarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(habitacionesLabel)
                                            .addGap(18, 18, 18)
                                            .addComponent(siButton)
                                            .addGap(18, 18, 18)
                                            .addComponent(noButton))))
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(calendarioLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(presentacionButton)
                                .addGap(27, 27, 27)
                                .addComponent(jornadaButton)
                                .addGap(40, 40, 40)
                                .addComponent(congresoButton)))
                        .addContainerGap(42, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(labelTitulo)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLabel)
                    .addComponent(nombreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidosLabel)
                    .addComponent(apellidosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefonoLabel)
                    .addComponent(telefonoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendarioLabel)
                            .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(asistLabel)
                            .addComponent(asistTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoCocinaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoCocinaLabel))
                        .addGap(67, 67, 67)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jornadasLabel)
                            .addComponent(jornadasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(siButton)
                            .addComponent(noButton)
                            .addComponent(habitacionesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                        .addComponent(reservarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(presentacionButton)
                            .addComponent(jornadaButton)
                            .addComponent(congresoButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Realiza la reserva utilizando los datos ingresados por el usuario y
     * muestra los detalles de la reserva en una ventana de diálogo.
     */
    public void realizarReserva() {
        // Crea una instancia de ReservaDatos y configura los datos de la reserva
        ReservaDatos ventanaReserva = new ReservaDatos(null, true);
        ventanaReserva.setNombre(reserva.getNombre());
        ventanaReserva.setApellidos(reserva.getApellidos());
        ventanaReserva.setTelefono(reserva.getTelefono());
        ventanaReserva.setFecha(reserva.getFecha());
        ventanaReserva.setEvento(reserva.getTipoEvento());
        ventanaReserva.setAsistentes(reserva.getNumeroAsistentes());
        ventanaReserva.setTipoCocina(reserva.getTipoCocina());
        ventanaReserva.setNumJornadas(reserva.getNumeroJornadas(), esCongreso);
        ventanaReserva.setHabitaciones(reserva.getNecesitaHabitaciones(), esCongreso);

        // Agrega un WindowListener a VentanaFinal para cerrar ReservaFormulario al cerrar VentanaDatos
        ventanaReserva.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {

                dispose(); // Cierra ReservaFormulario cuando VentanaDatos se cierra
            }
        });

        ventanaReserva.setVisible(true);
    }


    private void reservarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservarButtonActionPerformed

     //***************************VERIFICACIONES******************************
     
        // Verifica que se haya ingresado el nombre y los apellidos
        String nombre = nombreTextField.getText().trim();
        String apellidos = apellidosTextField.getText().trim();
        if (nombre.isEmpty() || apellidos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese nombre y apellidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detiene la operación si hay errores
        }
        
        // Verifica que se haya ingresado un teléfono válido
        String telefono = telefonoTextField.getText().trim();
        if (telefono.isEmpty() || !telefono.matches("\\d{9}")) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número de teléfono válido de 9 dígitos.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detiene la operación si hay errores
        }
        
        // Verifica que se haya seleccionado una fecha válida
        Date fechaSeleccionada = calendario.getDate();
        if (fechaSeleccionada == null) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fecha válida.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detiene la operación si hay errores
        }
        
        // Verifica que se haya seleccionado un tipo de evento
        if (!presentacionButton.isSelected() && !jornadaButton.isSelected() && !congresoButton.isSelected()) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un tipo de evento.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detiene la operación si no se ha seleccionado un tipo de evento
        }
 
        // Verifica que se haya ingresado el número de asistentes
        String asistentes = asistTextField.getText().trim();
        if (asistentes.isEmpty() || !asistentes.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido de asistentes.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detiene la operación si hay errores
        }
        
        // Verifica que se haya seleccionado un tipo de cocina
        String tipoCocinaSeleccionada = (String) tipoCocinaComboBox.getSelectedItem();
        if (tipoCocinaSeleccionada.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un tipo de cocina.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Detiene la operación si hay errores
        }
        
        // Verifica que se haya ingresado el número de jornadas si es un congreso
        if (esCongreso) {
            String jornadas = jornadasTextField.getText().trim();
            if (jornadas.isEmpty() || !jornadas.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido de jornadas.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Detiene la operación si hay errores
            }
        }
        
        // Verifica si se ha seleccionado una opción para las habitaciones si es un congreso
        if (esCongreso) {
            if (!siButton.isSelected() && !noButton.isSelected()) {
                JOptionPane.showMessageDialog(this, "Por favor, seleccione si los asistentes necesitarán habitaciones.", "Error", JOptionPane.ERROR_MESSAGE);
                return; // Detiene la operación si no se ha seleccionado una opción para las habitaciones
            }
        }
        
    //************FIN VERIFICACIONES*********************
    
        reserva.setNombre(nombreTextField.getText());
        reserva.setApellidos(apellidosTextField.getText());
        reserva.setTelefono(telefonoTextField.getText());
        fechaSeleccionada = calendario.getDate();
        // Formatea la fecha en el formato deseado (por ejemplo, dd/MM/yyyy)
        SimpleDateFormat sdf = new SimpleDateFormat("d MMM y");
        String fechaFormateada = sdf.format(fechaSeleccionada);
        reserva.setFecha(fechaFormateada);
        reserva.setTipoEvento(tipoDeEvento());
        reserva.setNumeroAsistentes(asistTextField.getText());
        tipoCocinaSeleccionada = (String) tipoCocinaComboBox.getSelectedItem();
        reserva.setTipoCocina(tipoCocinaSeleccionada);
        if (esCongreso == true) {
            // El evento es un congreso, así que recopila el número de jornadas y la necesidad de habitaciones.
            reserva.setNumeroJornadas(jornadasTextField.getText());

            boolean necesitaHabitaciones = siButton.isSelected();
            if (necesitaHabitaciones == true) {
                reserva.setNecesitaHabitaciones("Sí");
            }
            boolean noNecesitaHabitaciones = noButton.isSelected();
            if (noNecesitaHabitaciones == true) {
                reserva.setNecesitaHabitaciones("No");
            }
        }
        realizarReserva();

    }//GEN-LAST:event_reservarButtonActionPerformed

    private void presentacionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentacionButtonActionPerformed

        esCongreso = false;
        esJornada = false;
        esPresentacion = true;
        jornadasLabel.setEnabled(false);
        jornadasTextField.setEnabled(false);
        siButton.setEnabled(false);
        noButton.setEnabled(false);
        habitacionesLabel.setEnabled(false);
    }//GEN-LAST:event_presentacionButtonActionPerformed

    private void jornadaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jornadaButtonActionPerformed

        esCongreso = false;
        esJornada = true;
        esPresentacion = false;
        jornadasLabel.setEnabled(false);
        jornadasTextField.setEnabled(false);
        siButton.setEnabled(false);
        noButton.setEnabled(false);
        habitacionesLabel.setEnabled(false);
    }//GEN-LAST:event_jornadaButtonActionPerformed

    private void congresoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_congresoButtonActionPerformed

        esCongreso = true;
        esJornada = false;
        esPresentacion = false;
        jornadasLabel.setEnabled(true);
        jornadasTextField.setEnabled(true);
        siButton.setEnabled(true);
        noButton.setEnabled(true);
        habitacionesLabel.setEnabled(true);
    }//GEN-LAST:event_congresoButtonActionPerformed

    /**
     * Determina el tipo de evento seleccionado (Presentación, Jornada o
     * Congreso).
     *
     * @return El tipo de evento como una cadena de texto.
     */
    private String tipoDeEvento() {

        String tipoJornada = "";
        if (esPresentacion == true) {
            tipoJornada = "Presentación";
        } else if (esJornada == true) {
            tipoJornada = "Jornada";
        } else if (esCongreso == true) {
            tipoJornada = "Congreso";
        }
        return tipoJornada;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidosLabel;
    private javax.swing.JTextField apellidosTextField;
    private javax.swing.JLabel asistLabel;
    private javax.swing.JTextField asistTextField;
    private com.toedter.calendar.JDateChooser calendario;
    private javax.swing.JLabel calendarioLabel;
    private javax.swing.JRadioButton congresoButton;
    private javax.swing.ButtonGroup grupoBotonesHabitSiNo;
    private javax.swing.ButtonGroup grupoBotonesTipoEvent;
    private javax.swing.JLabel habitacionesLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton jornadaButton;
    private javax.swing.JLabel jornadasLabel;
    private javax.swing.JTextField jornadasTextField;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JRadioButton noButton;
    private javax.swing.JLabel nombreLabel;
    private javax.swing.JTextField nombreTextField;
    private javax.swing.JRadioButton presentacionButton;
    private javax.swing.JButton reservarButton;
    private javax.swing.JRadioButton siButton;
    private javax.swing.JLabel telefonoLabel;
    private javax.swing.JTextField telefonoTextField;
    private javax.swing.JComboBox<String> tipoCocinaComboBox;
    private javax.swing.JLabel tipoCocinaLabel;
    // End of variables declaration//GEN-END:variables
    private final Reserva reserva;
    private boolean esCongreso = false;
    private boolean esPresentacion = false;
    private boolean esJornada = false;
}
